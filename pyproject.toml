[project]
maintainers = [{name = "smknaake", email = "bas.knaake@deltares.nl"}]
dependencies = [
	"numpy",
	"rasterio",
	"rioxarray",
	"xarray",
	"dask",
	"pandas",
	"geopandas",
	"pytest",
	"netcdf4",
	"h5netcdf",
	"numba",
]
description = "Build subsurface models for subsidence modelling with Atlantis"
name = "atlantis-models"
requires-python = ">= 3.11"
dynamic = ["version"]
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "Subsidence models",
	"Atlantis",
	"Deltares", 
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
	"Topic :: Scientific/Engineering",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
]

[project.urls]
Repository = "https://github.com/Deltares-research/atlantis-models"
Issues = "https://github.com/Deltares-research/atlantis-models/issues"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.version]
path = "src/atmod/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/atmod"]

[tool.hatch.build.targets.sdist]
only-include = ["src/atmod", "tests"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
atlantis_models = { path = ".", editable = true }

[tool.pixi.tasks]
test = "NUMBA_DISABLE_JIT=1 pytest --cov=atmod --cov-report xml --cov-report term"
test_local = "NUMBA_DISABLE_JIT=1 pytest -v --cov"
format = "black ."
lint = "ruff check --fix ."
build-docs = "sphinx-build -b html docs ./docs/build"
rm-jupyter = "rm -r ./docs/jupyter_execute"
rm-build = "rm -r ./docs/build"
rm-generated = "rm -r ./docs/api_reference/generated"
rebuild-docs = { depends-on = ["rm_jupyter", "rm_build", "rm_generated", "build_docs"] }

[tool.pixi.dependencies]
python = ">=3.12"
pip = "*"
numpy = "*"
openpyxl = "*"
pyproj = "*"
shapely = "*"
owslib = "*"
rasterio = "*"
rioxarray = "*"
xarray = "*"
dask = "*"
pandas = "*"
geopandas = "*"
pytest = "*"
pytest-cov = "*"
netcdf4 = "*"
h5netcdf = "*"
numba = "*"
ruff = "*"
black = "*"
sphinx = "*"
sphinx-rtd-theme = "*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.environments]
default = { features = ["py313"], solve-group = "py313" }
py312 = { features = ["py312"], solve-group = "py312" }
py313 = { features = ["py313"], solve-group = "py313" }

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["F", "E", "W", "N", "I001", "NPY201"]
ignore = ["F401", "E501", "F811"]
unfixable = ["F401"]
pydocstyle.convention = "numpy"